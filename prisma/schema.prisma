datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Invoice {
  internalId         String   @id @default(cuid())
  id                 String   @unique()
  customerName       String
  totalAmount        Decimal
  currency           String
  status             String
  address            Address? @relation(fields: [addressId], references: [id])
  addressId          String?
  client             Client   @relation(fields: [clientId], references: [id])
  clientId           String
  paymentTerms       Int      @default(1)
  projectDescription String?
  lineItem           LineItem @relation(fields: [lineItemId], references: [id])
  lineItemId         String
  issuedAt           DateTime
}

model Address {
  id       String    @id @default(cuid())
  lineOne  String?
  city     String?
  postcode String?
  country  String?
  Invoice  Invoice[]
  Client   Client[]
}

model Client {
  id        String    @id @default(cuid())
  name      String?
  email     String
  address   Address?  @relation(fields: [addressId], references: [id])
  addressId String?
  Invoice   Invoice[]
}

model LineItem {
  id       String    @id @default(cuid())
  name     String?
  quantity Int?
  price    Decimal?
  Invoice  Invoice[]
}
